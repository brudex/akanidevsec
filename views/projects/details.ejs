<div class="container-fluid">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="h3 mb-0"><%= project.projectName %></h1>
            <p class="text-muted mb-0">
                <i class="fas fa-link"></i> 
                <a href="<%= project.gitlabUrl %>" target="_blank" class="text-decoration-none">
                    <%= project.gitlabUrl %>
                </a>
            </p>
        </div>
        <div class="d-flex align-items-center">
            <div class="dropdown me-2">
                <button class="btn btn-outline-secondary dropdown-toggle" type="button" data-bs-toggle="dropdown">
                    Status: <%= ['DEVELOPMENT', 'TESTING', 'UAT', 'CAB-APPROVAL', 'PRODUCTION'][project.projectStatus] %>
                </button>
                <ul class="dropdown-menu">
                    <% ['DEVELOPMENT', 'TESTING', 'UAT', 'CAB-APPROVAL', 'PRODUCTION'].forEach((status, index) => { %>
                        <li>
                            <a class="dropdown-item <%= project.projectStatus === index ? 'active' : '' %>" 
                               href="#" 
                               onclick="updateProjectStatus('<%= project.uuid %>', <%= index %>)">
                                <%= status %>
                            </a>
                        </li>
                    <% }); %>
                </ul>
            </div>
            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addServiceModal">
                <i class="fas fa-plus"></i> Add Service
            </button>
        </div>
    </div>

    <ul class="nav nav-tabs mb-4" id="projectTabs" role="tablist">
        <li class="nav-item">
            <a class="nav-link active" id="overview-tab" data-bs-toggle="tab" href="#overview">Overview</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="services-tab" data-bs-toggle="tab" href="#services">Services</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="environments-tab" data-bs-toggle="tab" href="#environments">Environments</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="notes-tab" data-bs-toggle="tab" href="#notes">Notes</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" id="cicd-tab" data-bs-toggle="tab" href="#cicd">CI/CD</a>
        </li>
    </ul>

    <div class="tab-content">
        <div class="tab-pane fade show active" id="overview">
            <div class="row">
                <div class="col-md-8">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h5 class="card-title">Description</h5>
                            <p class="card-text"><%= project.description || 'No description provided' %></p>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card mb-4">
                        <div class="card-body">
                            <h5 class="card-title">Project Team</h5>
                            <div class="mb-3">
                                <strong>Owner:</strong>
                                <p class="mb-0"><%= project.projectOwner %></p>
                            </div>
                            <div>
                                <strong>Developers:</strong>
                                <% if (project.developers && project.developers.length > 0) { %>
                                    <ul class="list-unstyled mb-0">
                                        <% project.developers.forEach(dev => { %>
                                            <li><%= dev %></li>
                                        <% }); %>
                                    </ul>
                                <% } else { %>
                                    <p class="mb-0">No developers assigned</p>
                                <% } %>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="tab-pane fade" id="services">
            <div class="row">
                <% if (project.services && project.services.length > 0) { %>
                    <% project.services.forEach(service => { %>
                        <div class="col-md-6 col-lg-4 mb-4">
                            <div class="card h-100">
                                <div class="card-body">
                                    <h5 class="card-title"><%= service.serviceName %></h5>
                                    <p class="card-text text-muted small mb-2">
                                        <i class="fas fa-link"></i> 
                                        <a href="<%= service.repositoryUrl %>" target="_blank" class="text-decoration-none">
                                            <%= service.repositoryUrl %>
                                        </a>
                                    </p>
                                    <p class="card-text"><%= service.description || 'No description provided' %></p>
                                    
                                    <% if (service.microservices && service.microservices.length > 0) { %>
                                        <div class="mt-3">
                                            <h6>Microservices:</h6>
                                            <ul class="list-unstyled">
                                                <% service.microservices.forEach(ms => { %>
                                                    <li>
                                                        <i class="fas fa-microchip"></i> <%= ms.microserviceName %>
                                                    </li>
                                                <% }); %>
                                            </ul>
                                        </div>
                                    <% } %>
                                </div>
                                <div class="card-footer bg-transparent">
                                    <button class="btn btn-sm btn-outline-primary" 
                                            onclick="addMicroservice('<%= service.uuid %>')">
                                        Add Microservice
                                    </button>
                                </div>
                            </div>
                        </div>
                    <% }); %>
                <% } else { %>
                    <div class="col-12">
                        <div class="text-center py-5">
                            <i class="fas fa-cogs fa-3x text-muted mb-3"></i>
                            <h5>No Services Yet</h5>
                            <p class="text-muted">Add your first service to get started</p>
                            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addServiceModal">
                                Add Service
                            </button>
                        </div>
                    </div>
                <% } %>
            </div>
        </div>

        <div class="tab-pane fade" id="environments">
            <div class="row">
                <div class="col-12">
                    <div class="table-responsive">
                        <table class="table table-hover">
                            <thead>
                                <tr>
                                    <th>Environment</th>
                                    <th>Cluster</th>
                                    <th>Namespace</th>
                                    <th>Status</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                <% project.services.forEach(service => { %>
                                    <% service.microservices.forEach(ms => { %>
                                        <% ms.deploymentConfigs.forEach(config => { %>
                                            <tr>
                                                <td><%= config.environment.environmentName %></td>
                                                <td><%= config.environment.clusterName %></td>
                                                <td><%= config.namespace %></td>
                                                <td>
                                                    <span class="badge bg-success">Active</span>
                                                </td>
                                                <td>
                                                    <button class="btn btn-sm btn-outline-secondary">
                                                        View Details
                                                    </button>
                                                </td>
                                            </tr>
                                        <% }); %>
                                    <% }); %>
                                <% }); %>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>

        <div class="tab-pane fade" id="notes">
            <div class="row">
                <div class="col-md-8">
                    <div class="card mb-4">
                        <div class="card-body">
                            <form id="addNoteForm" onsubmit="addProjectNote(event)">
                                <div class="mb-3">
                                    <label for="noteText" class="form-label">Add Note</label>
                                    <textarea class="form-control" id="noteText" name="noteText" rows="3"></textarea>
                                </div>
                                <div class="mb-3">
                                    <label for="noteFile" class="form-label">Attach File (Max 50MB)</label>
                                    <input type="file" class="form-control" id="noteFile" name="file">
                                </div>
                                <button type="submit" class="btn btn-primary">Add Note</button>
                            </form>
                        </div>
                    </div>

                    <div class="notes-list">
                        <% if (project.notes && project.notes.length > 0) { %>
                            <% project.notes.forEach(note => { %>
                                <div class="card mb-3">
                                    <div class="card-body">
                                        <div class="d-flex justify-content-between align-items-start">
                                            <p class="card-text mb-2"><%= note.noteText %></p>
                                            <small class="text-muted">
                                                <%= new Date(note.createdAt).toLocaleString() %>
                                            </small>
                                        </div>
                                        <% if (note.fileName) { %>
                                            <div class="mt-2">
                                                <i class="fas fa-paperclip"></i>
                                                <a href="/projects/notes/<%= note.uuid %>/file" class="text-decoration-none">
                                                    <%= note.fileName %>
                                                </a>
                                                <span class="text-muted">
                                                    (<%= Math.round(note.fileSize / 1024) %> KB)
                                                </span>
                                            </div>
                                        <% } %>
                                    </div>
                                </div>
                            <% }); %>
                        <% } else { %>
                            <div class="text-center py-4">
                                <p class="text-muted">No notes added yet</p>
                            </div>
                        <% } %>
                    </div>
                </div>
            </div>
        </div>

        <div class="tab-pane fade" id="cicd">
            <div class="row">
                <div class="col-md-8">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">CI/CD Configuration</h5>
                            <div class="mb-4">
                                <h6>Active Templates</h6>
                                <ul class="list-group">
                                    <% if (project.cicdSpecification) { %>
                                        <% Object.entries(project.cicdSpecification).forEach(([key, value]) => { %>
                                            <li class="list-group-item">
                                                <div class="d-flex justify-content-between align-items-center">
                                                    <div>
                                                        <strong><%= key.toUpperCase() %></strong>
                                                        <p class="mb-0 text-muted small">
                                                            <%= value ? 'Enabled' : 'Disabled' %>
                                                        </p>
                                                    </div>
                                                    <div class="form-check form-switch">
                                                        <input class="form-check-input" type="checkbox" 
                                                               <%= value ? 'checked' : '' %>
                                                               onchange="updateCicdTemplate('<%= project.uuid %>', '<%= key %>', this.checked)">
                                                    </div>
                                                </div>
                                            </li>
                                        <% }); %>
                                    <% } else { %>
                                        <li class="list-group-item">
                                            <p class="text-muted mb-0">No CI/CD templates configured</p>
                                        </li>
                                    <% } %>
                                </ul>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Add Service Modal -->
<div class="modal fade" id="addServiceModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Service</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addServiceForm" onsubmit="createService(event)">
                    <div class="mb-3">
                        <label for="serviceName" class="form-label">Service Name *</label>
                        <input type="text" class="form-control" id="serviceName" name="serviceName" required>
                    </div>
                    <div class="mb-3">
                        <label for="repositoryUrl" class="form-label">Repository URL *</label>
                        <input type="url" class="form-control" id="repositoryUrl" name="repositoryUrl" required>
                    </div>
                    <div class="mb-3">
                        <label for="serviceDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="serviceDescription" name="description" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="addServiceForm" class="btn btn-primary">Add Service</button>
            </div>
        </div>
    </div>
</div>

<!-- Add Microservice Modal -->
<div class="modal fade" id="addMicroserviceModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add New Microservice</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <form id="addMicroserviceForm" onsubmit="createMicroservice(event)">
                    <input type="hidden" id="serviceUuid" name="serviceUuid">
                    <div class="mb-3">
                        <label for="microserviceName" class="form-label">Microservice Name *</label>
                        <input type="text" class="form-control" id="microserviceName" name="microserviceName" required>
                    </div>
                    <div class="mb-3">
                        <label for="microserviceDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="microserviceDescription" name="description" rows="3"></textarea>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-bs-dismiss="modal">Cancel</button>
                <button type="submit" form="addMicroserviceForm" class="btn btn-primary">Add Microservice</button>
            </div>
        </div>
    </div>
</div>

<script>
function updateProjectStatus(uuid, status) {
    fetch(`/projects/${uuid}/status`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({ status })
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            location.reload();
        } else {
            alert(data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Failed to update project status');
    });
}

function createService(event) {
    event.preventDefault();
    const form = event.target;
    const formData = new FormData(form);
    
    fetch(`/projects/<%= project.uuid %>/services`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(Object.fromEntries(formData))
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            location.reload();
        } else {
            alert(data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Failed to create service');
    });
}

function addMicroservice(serviceUuid) {
    document.getElementById('serviceUuid').value = serviceUuid;
    new bootstrap.Modal(document.getElementById('addMicroserviceModal')).show();
}

function createMicroservice(event) {
    event.preventDefault();
    const form = event.target;
    const formData = new FormData(form);
    const serviceUuid = formData.get('serviceUuid');
    
    fetch(`/services/${serviceUuid}/microservices`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify(Object.fromEntries(formData))
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            location.reload();
        } else {
            alert(data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Failed to create microservice');
    });
}

function addProjectNote(event) {
    event.preventDefault();
    const form = event.target;
    const formData = new FormData(form);
    
    fetch(`/projects/<%= project.uuid %>/notes`, {
        method: 'POST',
        body: formData
    })
    .then(response => response.json())
    .then(data => {
        if (data.success) {
            location.reload();
        } else {
            alert(data.message);
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Failed to add note');
    });
}

function updateCicdTemplate(projectUuid, template, enabled) {
    fetch(`/projects/${projectUuid}/cicd`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            template,
            enabled
        })
    })
    .then(response => response.json())
    .then(data => {
        if (!data.success) {
            alert(data.message);
            location.reload();
        }
    })
    .catch(error => {
        console.error('Error:', error);
        alert('Failed to update CI/CD template');
        location.reload();
    });
}
</script>